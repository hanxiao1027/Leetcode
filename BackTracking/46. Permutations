class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        dfs(result, nums, new ArrayList<>());
        return result;
    }
    private void dfs(List<List<Integer>> result, int[] nums, List<Integer> current){
        if(nums.length == current.size()){ 
            result.add(new ArrayList<>(current));
            return;
        }
        for(int i = 0; i < nums.length; i++){
            if(!current.contains(nums[i])){
                current.add(nums[i]);
                dfs(result, nums, current);
                
                current.remove(current.size() - 1);
            }
            
        }
    }
}
