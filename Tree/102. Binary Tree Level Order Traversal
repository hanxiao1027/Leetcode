/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if(root == null) return result;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        dfs(queue, result);
        return result;
    }
    private void dfs(Queue<TreeNode> queue, List<List<Integer>> result){
        if(queue.size() == 0) return;
        int queuesize = queue.size();
        List<Integer> temp = new ArrayList<>();
        for(int i = 0; i < queuesize; i++){
            TreeNode node = queue.poll();
            temp.add(node.val);
            if(node.left != null) queue.offer(node.left);
            if(node.right != null) queue.offer(node.right);
        }
        result.add(new ArrayList<>(temp));
        dfs(queue, result);
        
    }
}
