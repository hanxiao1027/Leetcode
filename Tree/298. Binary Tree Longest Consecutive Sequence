/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int result = 1;
    public int longestConsecutive(TreeNode root) {
        if(root == null) return 0;
        dfs(root.left, root.val, 1);
        dfs(root.right, root.val, 1);
        return result;
    }
    private void dfs(TreeNode node, int lastVal, int level){
        if(node == null) return;
        int currlevel = level;
        if(node.val == lastVal + 1) currlevel++;
        else currlevel = 1;
        if(currlevel > result) result = currlevel;
        //System.out.println("level" + currlevel + "val" + node.val);
        if(node.left != null) dfs(node.left, node.val, currlevel);
        if(node.right != null) dfs(node.right, node.val, currlevel);
    }
}
