/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> result = new ArrayList<>();
        if(root == null) return result;
        dfs(root,"" , result, 1);
        
        return result;
    }
    private void dfs(TreeNode node, String current, List<String> result, int isRoot){
        if(isRoot == 1){
            current += node.val;
        }
        else current += "->" + node.val;
        if(node.left == null && node.right == null){
            result.add(current);
        }
        if(node.left != null) dfs(node.left, current, result, 0);
        if(node.right != null) dfs(node.right, current, result, 0);
        
    }
}
