/**
 * Definition for singly-linked list with a random pointer.
 * class RandomListNode {
 *     int label;
 *     RandomListNode next, random;
 *     RandomListNode(int x) { this.label = x; }
 * };
 */
public class Solution {
    public RandomListNode copyRandomList(RandomListNode head) {
        if(head == null){
            return null;
        }
        
        RandomListNode dummy = new RandomListNode(0);
        RandomListNode curr = head;
        while(curr != null){
            RandomListNode copy = new RandomListNode(curr.label);
            copy.next = curr.next;
            curr.next = copy;
            curr = copy.next;
        }
        curr = head;
        while(curr != null){
            RandomListNode copy = curr.next;
            copy.random = null;
            if(curr.random != null)copy.random = curr.random.next;
            curr = copy.next;
        }
        if(head != null)dummy.next = head.next;
        if(head != null) curr = head;
        while(curr.next != null){
            RandomListNode temp = curr.next;
            curr.next = temp.next;
            curr = temp;
        }
        return dummy.next;
    }
}
