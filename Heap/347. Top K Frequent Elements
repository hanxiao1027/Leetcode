class Solution {
    public List<Integer> topKFrequent(int[] nums, int k) {
        List<Integer> result = new ArrayList<>();
        Map<Integer, Integer> map = new HashMap<>();
        
        for(int i = 0; i < nums.length; i++){
            map.put(nums[i], map.getOrDefault(nums[i], 0) + 1);
        }
        PriorityQueue<Integer> heap = new PriorityQueue<>((n1, n2) -> map.get(n2) - map.get(n1));
        for(int num: map.keySet()){
            heap.add(num);
        }
        for(int n = 0; n < k; n++){
            result.add(heap.poll());
        }
        Collections.sort(result);
        return result;
        
    }
}
