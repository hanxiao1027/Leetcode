class Solution {
    public boolean equationsPossible(String[] equations) {
        List<Integer> nodes = new ArrayList<>();
        int[] roots = new int[26];
        for(int i = 0; i < 26; i++){
            roots[i] = i;
        }
        for(String str : equations){
            if(str.charAt(1) == '!') continue;
            char char1 = str.charAt(0);
            char char2 = str.charAt(3);
            
            int root1 = findRoot(char1, roots);
            int root2 = findRoot(char2, roots);
            if(root1 != root2){
                roots[root2] = root1;
            }
        }
        for(String str : equations){
            if(str.charAt(1) == '=') continue;
            char char1 = str.charAt(0);
            char char2 = str.charAt(3);
            int root1 = findRoot(char1, roots);
            int root2 = findRoot(char2, roots);
            if(root1 == root2){
                return false;
            }
        }
        return true;
    }
    private int findRoot(char c, int[] roots){
        int i = c - 'a';
        while(roots[i] != i){
            i = roots[i];
        }
        return i;
    }
}
