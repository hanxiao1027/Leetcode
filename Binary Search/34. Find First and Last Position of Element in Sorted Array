class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] result = new int[]{-1, -1};
        
        if(nums == null || nums.length == 0) return result;
        //find first
        int lo = 0, hi = nums.length - 1;
        while(lo <= hi){
            int mid = lo + (hi - lo) / 2;
            if(nums[mid] == target){
                if(mid == 0 || nums[mid - 1] < target){
                    result[0] = mid;
                    break;
                }
                else hi = mid - 1;
            }
            else if(nums[mid] > target){
                hi = mid - 1;
            }
            else{
                lo = mid + 1;
            }
        }
        //find last
        lo = 0;
        hi = nums.length - 1;
        while(lo <= hi){
            int mid = lo + (hi - lo) / 2;
            if(nums[mid] == target){
                if(mid == nums.length - 1 || nums[mid + 1] > target){
                    result[1] = mid;
                    break;
                }
                else lo = mid + 1;
            }
            else if(nums[mid] > target){
                hi = mid - 1;
            }
            else{
                lo = mid + 1;
            }
        }
        
        return result;
    }
}
