class Solution {
    public int maximalSquare(char[][] matrix) {
        int result = 0;
        if(matrix.length == 0 || matrix == null) return 0;
        int[][] dp = new int[matrix.length][matrix[0].length];
        dp[0][0] = (matrix[0][0] == '1')? 1 : 0;
        result = Math.max(result, dp[0][0]);
        for(int i = 1; i < matrix.length; i++){
            dp[i][0] = (matrix[i][0] == '1')? 1 : 0;
            result = Math.max(result, dp[i][0]);
        }
        for(int i = 1; i < matrix[0].length; i++){
            dp[0][i] = (matrix[0][i] == '1')? 1 : 0;
            result = Math.max(result, dp[0][i]);
        }
        for(int i = 1; i < matrix.length; i++){
            for(int j = 1; j < matrix[0].length; j++){
                if(matrix[i][j] == '1'){
                    dp[i][j] = Math.min(Math.min(dp[i - 1][j], dp[i][j - 1]), dp[i - 1][j - 1]) + 1;
                    result = Math.max(dp[i][j] * dp[i][j], result);
                }
            }
        }
        return result;
        
    }
}
