class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        if(s1.length() + s2.length() != s3.length()) return false;
        if(s1.length() == 0 || s2.length() == 0) return (s1.equals(s3) || s2.equals(s3));
        boolean[][] dp = new boolean[s1.length() + 1][s2.length() + 1];
        dp[0][0] = true;
        //dp[i][j] 代表 s1选i位 s2选j位 符不符合
        for(int i = 1; i <= s1.length(); i++){
            dp[i][0] = dp[i - 1][0] && s1.charAt(i - 1) == s3.charAt(i - 1);
            
        }
        for(int i = 1; i <= s2.length(); i++){
            dp[0][i] = dp[0][i - 1] && s2.charAt(i - 1) == s3.charAt(i - 1);
        }
        
        for(int i = 1; i <= s1.length(); i++){
            for(int j = 1; j <= s2.length(); j++){
                dp[i][j] = false;
                if(dp[i - 1][j]){
                    if(s1.charAt(i - 1) == s3.charAt(i + j - 1)){
                        dp[i][j] = true;
                        
                    }
                }
                if(dp[i][j - 1]){
                    if(s2.charAt(j - 1) == s3.charAt(i + j - 1)){
                        dp[i][j] = true;
                       
                    }
                }
                
            }
            
            
        }
        return dp[s1.length()][s2.length()];
    }
}
