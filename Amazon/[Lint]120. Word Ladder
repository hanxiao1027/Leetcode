public class Solution {
    /*
     * @param start: a string
     * @param end: a string
     * @param dict: a set of string
     * @return: An integer
     */
    public int ladderLength(String start, String end, Set<String> dict) {
        // write your code here
        if(start.equals(end)) return 1;
        List<String> list = new ArrayList<>(dict);
        Set<String> set = new HashSet<>();
        Queue<String> queue = new LinkedList<>();
        queue.offer(start);
        int level = 0;
        while(!queue.isEmpty()){
            level++;
            int size = queue.size();
            for(int i = 0; i < size; i++){
                String curr = queue.poll();
                if(isTrans(curr,end)) return level + 1;
                for(String str : list){
                    if(!dict.contains(str)){
                        continue;
                    }
                    
                    if(isTrans(str, curr)){
                        queue.offer(str);
                        dict.remove(str);
                    }
                }
               
            }
        }
        return 0;
        
    }
    private boolean isTrans(String s1, String s2){
        int count = 0;
        for(int i = 0; i < s1.length(); i++){
            if(s1.charAt(i) != s2.charAt(i)){
                count++;
            }
        }
        return count == 1;
        
    }
}
