class Solution {
    public void gameOfLife(int[][] board) {
        if(board == null || board.length == 0) return;
        for(int i = 0; i < board.length; i++){
            for(int j = 0; j < board[0].length; j++){
                int liveNeighbors = liveNeighbors(board, i, j);
                if(board[i][j] == 1){
                    if(liveNeighbors < 2) board[i][j] = 2;// live->die
                    else if(liveNeighbors <= 3) continue; //live-> live
                    else board[i][j] = 2;//live -> die
                }
                else if(board[i][j] == 0){
                    if(liveNeighbors == 3) board[i][j] = -1;//die->live
                }
            }
        }
        for(int i = 0; i < board.length; i++){
            for(int j = 0; j < board[0].length; j++){
                if(board[i][j] == 2) board[i][j] = 0;
                else if(board[i][j] == -1) board[i][j] = 1;
            }
        }
        
    }
    private int liveNeighbors(int[][] board, int i, int j){
        return isLive(board, i - 1, j - 1) + isLive(board, i - 1, j) + isLive(board, i - 1, j + 1) + isLive(board, i, j + 1) + isLive(board, i + 1, j + 1) + isLive(board, i + 1, j) + isLive(board, i + 1, j - 1) + isLive(board, i, j - 1);
    }
    private int isLive(int[][] board, int i, int j){
        if(i < 0 || j < 0 || i >= board.length || j >= board[0].length){
            return 0;
        }
        if(board[i][j] < 0) return 0;
        return Math.min(board[i][j], 1);
    }
}
