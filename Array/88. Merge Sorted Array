//No EXTRA SPACE
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int mm = 1;
        int nn = 1;
        while(mm <= m && nn <= n){
            nums1[m + n  - mm - nn + 1] = Math.max(nums1[m  - mm], nums2[n  - nn]);
            if(nums1[m  - mm] >= nums2[n - nn]){
                mm++;
            }
            else nn++;
        }
        if(mm <= m){
            return;
        }
        if(nn <= n){
            for(int i = 0; i < n - nn + 1; i++){
                nums1[i] = nums2[i];
            }
        }
        return;
    }
}



//////////


class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int[] result = new int[m + n];
        int mm = 0, nn = 0;
        while(mm < m && nn < n){
            if(nums1[mm] <= nums2[nn]){
                result[mm + nn] = nums1[mm++];
            }
            else{
                result[mm + nn] = nums2[nn++];

            }
        }
        while(mm < m){
            result[nn + mm] = nums1[mm++];
        }
        while(nn < n){
            result[nn + mm] = nums2[nn++];
        }
        for(int i = 0; i < result.length; i++){
            nums1[i] = result[i];
        }
        
    }
}
