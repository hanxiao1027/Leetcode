/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
class Solution {
    class sortIntervals implements Comparator<Interval>{
        public int compare(Interval i1, Interval i2){
            return i1.start - i2.start;
        }
        
    }
    public List<Interval> insert(List<Interval> intervals, Interval newInterval) {
        int left = newInterval.start;
        int right = newInterval.end;
        for(int i = 0; i < intervals.size();){
            Interval curr = intervals.get(i);
            if(curr.end < left){//全部小于
                i++;
                continue;
            }
            else{//end >= left
                if(curr.start > right){
                    i++;
                    continue;
                }
                left = Math.min(left, curr.start);
                right = Math.max(right, curr.end);
                intervals.remove(i);
            }
        }
        intervals.add(new Interval(left, right));
        Collections.sort(intervals, new sortIntervals());
        return intervals;
            
    }
}
