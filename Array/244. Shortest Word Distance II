class WordDistance {
    private Map<String, List<Integer>> map = new HashMap<>();
    public WordDistance(String[] words) {
        for(int i = 0; i < words.length; i++){
            if(map.containsKey(words[i])){
                
                map.get(words[i]).add(i);
            }
            else{
                List<Integer> temp = new ArrayList<Integer>();
                temp.add(i);
                map.put(words[i], temp);
            }
            
        }
    }
    
    public int shortest(String word1, String word2) {
        List<Integer> w1 = map.get(word1);
        List<Integer> w2 = map.get(word2);
        int result = Integer.MAX_VALUE;
       // System.out.println(w2.size());
        int i = 0, j = 0;
        while(i < w1.size() && j < w2.size()){
            int t1 = w1.get(i);
            int t2 = w2.get(j);
            //System.out.println(i);
            if(w1.get(i) < w2.get(j)){
                result = Math.min(result, t2 - t1);
                i++;
            }
            else{
                result = Math.min(result, t1 - t2);
                j++;
            }
        }
        return result;
    }
}

/**
 * Your WordDistance object will be instantiated and called as such:
 * WordDistance obj = new WordDistance(words);
 * int param_1 = obj.shortest(word1,word2);
 */
