// 1. 快慢指针

public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head == null) return false;
        ListNode slow, fast;
        slow = head;
        fast = head.next;
        while(slow != null && fast != null){
            if(slow == fast){
                return true;
            }
            slow = slow.next;
            fast = fast.next;
            if(fast == null) return false;
            else fast = fast.next;
        }
        
        return false;
    }
}
// 2. Set

public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head == null) return false;
        Set<ListNode> set = new HashSet<>();
        while(head != null){
            if(set.contains(head)){
                //System.out.println(head.val);
                return true;
            }
            else{
                set.add(head);
                head = head.next;
            }
            
        }
        return false;
    }
}
