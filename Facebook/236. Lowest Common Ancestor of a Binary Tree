class Solution {
    TreeNode result;
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        getLower(root, p, q);
        return result;
    }
    private int getLower(TreeNode node, TreeNode p, TreeNode q){
        if(node == null) return -1;
        int left = getLower(node.left, p, q);
        int right = getLower(node.right, p, q);
        if((left == 1 && right == 2) || (left == 2 && right == 1)){
            result = node;
            return - 1;
        }
        if(node == p){
            if(left == 2 || right == 2){
                result = node;
                return -1;
            }
            else{
                return 1;
            }
        }
        else if(node == q) {
            if(left == 1 || right == 1){
                result = node;
                return -1;
            }
            else{
                return 2;
            }
        }
        else{
            return Math.max(left, right);
        }
    }
}
