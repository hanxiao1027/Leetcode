class NumMatrix {
    int[][] dp;
    int[][] matrix;

    public NumMatrix(int[][] matrix) {
        this.matrix = matrix;
        int row = matrix.length;
        if(row != 0){
            int col = matrix[0].length;
        dp = new int[row][col];
        dp[0][0] = matrix[0][0];
        for(int i = 1; i < row; i++){
            dp[i][0] = matrix[i][0] + dp[i - 1][0];
        }
        for(int j = 1; j < col; j++){
            dp[0][j] = matrix[0][j] + dp[0][j - 1];
        }
        for(int i = 1; i < row; i++){
            for(int j = 1; j < col; j++){
                dp[i][j] = dp[i - 1][j] + dp[i][j - 1] - dp[i - 1][j - 1] + matrix[i][j];
            }
        }
        }
        
    }
    
    public int sumRegion(int row1, int col1, int row2, int col2) {
        if(row1 == 0 && col1 == 0){
            return dp[row2][col2];
        }
        if(row1 == row2 && col1 == col2){
            return matrix[row1][col1];
        }
        return dp[row2][col2] + ((row1 > 0 && col1 > 0)? dp[row1 - 1][col1 - 1] : 0) - ((col1 > 0)?dp[row2][col1 - 1] : 0 )- ((row1 > 0 )?dp[row1 - 1][col2] : 0);
    }
}

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix obj = new NumMatrix(matrix);
 * int param_1 = obj.sumRegion(row1,col1,row2,col2);
 */
