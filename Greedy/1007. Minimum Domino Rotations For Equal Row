class Solution {
    public int minDominoRotations(int[] A, int[] B) {
        int dest = -1;
        int diff = A.length;
        int exceed = 0;
        int[] numsA = new int[7];
        int[] numsB = new int[7];
        for(int i = 0; i < A.length; i++){
            numsA[A[i]]++;
            numsB[B[i]]++;
        }
        for(int i = 1; i <= 6; i++){
            if(numsA[i] + numsB[i] >= A.length){
                
                if(Math.abs(numsA[i] - numsB[i]) <= diff){
                    diff = Math.abs(numsA[i] - numsB[i]);
                    dest = i;
                    exceed = numsA[i] + numsB[i] - A.length;
                }
            }
        }
        if(dest == -1) return -1;
        if(exceed == 0){
            for(int i = 0; i < A.length; i++){
                if(A[i] == dest && B[i] == dest) return -1;
            }
        }
        else if(exceed > 0){
            int count = 0;
            for(int i = 0; i < A.length; i++){
                if(A[i] == dest && B[i] == dest) count++;
            }
            if(count > exceed) return -1;
        }
        return Math.min(numsA[dest], numsB[dest]) - exceed;
    }
}
